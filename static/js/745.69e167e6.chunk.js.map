{"version":3,"file":"static/js/745.69e167e6.chunk.js","mappings":"wSAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,IACtB,IAAIC,GAAWC,EAAAA,EAAAA,MAEf,GAAoBC,EAAAA,EAAAA,MAAbC,GAAP,eACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,aAAaC,QAAQ,QAASC,KAAKC,UAAUN,MAC5C,CAACA,IAEJ,IAAMO,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOZ,EAASa,GAClB,IAAK,WACH,OAAOX,EAAYW,GACrB,QACE,SAIAC,EAAiB,mCAAG,WAAOC,GAAP,uFACNlB,EAAUkB,GADJ,UAClBC,EADkB,iBAGlBA,EAAIC,KAAKd,MAHS,uBAIpBC,EAASY,EAAIC,KAAKd,OAJE,kBAKbT,EAAS,IAAK,CAAEwB,SAAS,KALZ,OAOtBC,MAAM,gBAAD,OAAiBH,EAAII,MAAMC,OAA3B,2CAPiB,kDAStBF,MAAM,gBAAD,OAAiBH,EAAII,MAAMC,OAA3B,2CATiB,0DAAH,sDAwBvB,OACE,0BACE,iBAAMC,SARW,SAACC,GACpBA,EAAEC,iBACFV,EAAkB,CAAEf,MAAAA,EAAOE,SAAAA,IAN3BD,EAAS,IACTE,EAAY,KAWoBuB,MAAOvC,EAAOC,KAAMuC,aAAa,MAA/D,UACE,UAAC,KAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,eAAe,gBAAgBC,WAAW,SAASC,IAAK,EAA3F,WACE,wCACA,SAAC,IAAD,CAAWC,UAAQ,EAAC3C,MAAM,QAAQ4C,KAAK,QAAQrB,KAAK,QAAQC,MAAOd,EAAOmC,SAAUxB,KACpF,SAAC,IAAD,CAAWsB,UAAQ,EAAC3C,MAAM,WAAW4C,KAAK,WAAWrB,KAAK,WAAWC,MAAOZ,EAAUiC,SAAUxB,KAChG,SAAC,IAAD,CAAQuB,KAAK,SAASE,QAAQ,WAAWC,MAAM,UAAUC,KAAK,QAA9D","sources":["views/LoginView.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useLoginUserMutation } from \"..//redux/api/usersApi\";\r\nimport { TextField, Button, Grid } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function LoginView() {\r\n  let navigate = useNavigate();\r\n\r\n  const [loginUser] = useLoginUserMutation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"token\", JSON.stringify(token));\r\n  }, [token]);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const formSubmitHandler = async (values) => {\r\n    const res = await loginUser(values);\r\n    try {\r\n      if (res.data.token) {\r\n        setToken(res.data.token);\r\n        return navigate(\"/\", { replace: true });\r\n      }\r\n      alert(`Error status ${res.error.status}, message: not found email or password`);\r\n    } catch {\r\n      alert(`Error status ${res.error.status}, message: not found email or password`);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    formSubmitHandler({ email, password });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <Grid container direction=\"column\" justifyContent=\"space-between\" alignItems=\"center\" gap={4}>\r\n          <h1>Login page</h1>\r\n          <TextField required label=\"Email\" type=\"email\" name=\"email\" value={email} onChange={handleChange} />\r\n          <TextField required label=\"Password\" type=\"password\" name=\"password\" value={password} onChange={handleChange} />\r\n          <Button type=\"submit\" variant=\"outlined\" color=\"success\" size=\"large\">\r\n            Ok\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","LoginView","navigate","useNavigate","useLoginUserMutation","loginUser","useState","email","setEmail","password","setPassword","token","setToken","useEffect","localStorage","setItem","JSON","stringify","handleChange","target","name","value","formSubmitHandler","values","res","data","replace","alert","error","status","onSubmit","e","preventDefault","style","autoComplete","container","direction","justifyContent","alignItems","gap","required","type","onChange","variant","color","size"],"sourceRoot":""}