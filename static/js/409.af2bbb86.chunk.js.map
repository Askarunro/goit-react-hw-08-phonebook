{"version":3,"file":"static/js/409.af2bbb86.chunk.js","mappings":"uNACA,EAAuB,0BAAvB,EAAyD,2B,6BCiFzD,MA9EA,YAA6E,IAA7DA,EAA4D,EAA5DA,SAA4D,IAAlDC,SAAAA,OAAkD,MAAvC,GAAuC,MAAnCC,WAAAA,OAAmC,MAAtB,GAAsB,EAAlBC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GACpE,GAAwBC,EAAAA,EAAAA,UAASJ,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASH,GAArC,eAAOM,EAAP,KAAeC,EAAf,KACcC,GAAaC,EAAAA,EAAAA,MAAnBC,KAEFC,EAAgB,SAACC,GACrB,MAAwBA,EAAEC,cAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAEd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,KAKVC,EAAiB,mCAAG,WAAOC,GAAP,0EACpBC,GAAQ,EACRT,EAASU,QAAU,GACrBV,EAASW,SAAQ,SAACC,GACZA,EAAQhB,KAAKiB,gBAAkBL,EAAOZ,KAAKiB,gBAC7CJ,GAAQ,MAITA,EATmB,gCAUThB,EAAWe,GAVF,mDAYpBC,IAASf,EAZW,iCAaTD,EAAWe,GAbF,gDAcjBM,MAAM,GAAD,OAAIN,EAAOZ,KAAX,2BAdY,4CAAH,sDA4BvB,OACE,kBAAMmB,SAPa,SAACX,GACpBA,EAAEY,iBACFT,EAAkB,CAAEX,KAAAA,EAAME,OAAAA,EAAQJ,GAAAA,IANlCG,EAAQ,IACRE,EAAU,KAUoBkB,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,kBACEC,KAAK,OACLvB,KAAK,OACLU,MAAOV,EACPwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUpB,QAGd,mBAAOc,UAAWC,EAAlB,oBAEE,kBACEC,KAAK,MACLvB,KAAK,SACLU,MAAOR,EACPsB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUpB,QAId,mBAAQgB,KAAK,SAAb,SAAuB7B,S,gICxEd,SAASkC,IACtB,IAAQ9B,GAAO+B,EAAAA,EAAAA,MAAP/B,GACR,GAAwBC,EAAAA,EAAAA,YAAxB,eAAO+B,EAAP,KAAaC,EAAb,KACA,GAAmBC,EAAAA,EAAAA,MAAZ5B,GAAP,eACc6B,GAAgB5B,EAAAA,EAAAA,MAAtBC,KAYR,OAVA4B,EAAAA,EAAAA,YAAU,WACJD,GACFA,EAAYE,MAAK,SAACnB,GACZA,EAAQlB,KAAOA,GACjBiC,EAAQf,QAIb,CAACiB,KAEG,yBAAMH,IAAQ,SAAC,IAAD,CAAapC,SAAQ,iBAAoBC,SAAUmC,EAAK9B,KAAMJ,WAAYkC,EAAK5B,OAAQL,WAAYO,EAAUN,GAAIA","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","views/ContactView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__yq4wq\",\"label\":\"ContactForm_label__pWUGU\"};","import f from \"./ContactForm.module.css\";\r\nimport { useState } from \"react\";\r\nimport { useGetContactsQuery } from \"..//../redux/api/contactsApi\";\r\n\r\nfunction Form({ btnTitle, contName = \"\", contNumber = \"\", addContact, id }) {\r\n  const [name, setName] = useState(contName);\r\n  const [number, setNumber] = useState(contNumber);\r\n  const { data: contacts } = useGetContactsQuery();\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const formSubmitHandler = async (values) => {\r\n    let exist = false;\r\n    if (contacts.length >= 0) {\r\n      contacts.forEach((contact) => {\r\n        if (contact.name.toLowerCase() === values.name.toLowerCase()) {\r\n          exist = true;\r\n        }\r\n      });\r\n    }\r\n    if (!exist) {\r\n      return await addContact(values);\r\n    }\r\n    if (exist && id) {\r\n      return await addContact(values);\r\n    } else alert(`${values.name} is already i contacts`);\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    formSubmitHandler({ name, number, id });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitForm} className={f.form}>\r\n      <label className={f.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={onChangeInput}\r\n        />\r\n      </label>\r\n      <label className={f.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={onChangeInput}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">{btnTitle}</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport { useUpdateMaterialMutation, useGetContactsQuery } from \"..//redux/api/contactsApi\";\r\n\r\nexport default function ContactView() {\r\n  const { id } = useParams();\r\n  const [cont, setCont] = useState();\r\n  const [contacts] = useUpdateMaterialMutation();\r\n  const { data: allContacts } = useGetContactsQuery();\r\n\r\n  useEffect(() => {\r\n    if (allContacts) {\r\n      allContacts.find((contact) => {\r\n        if (contact.id === id) {\r\n          setCont(contact);\r\n        }\r\n      });\r\n    }\r\n  }, [allContacts]);\r\n\r\n  return <div>{cont && <ContactForm btnTitle={`Update Contact`} contName={cont.name} contNumber={cont.number} addContact={contacts} id={id} />}</div>;\r\n}\r\n"],"names":["btnTitle","contName","contNumber","addContact","id","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","onChangeInput","e","currentTarget","value","formSubmitHandler","values","exist","length","forEach","contact","toLowerCase","alert","onSubmit","preventDefault","className","f","type","pattern","title","required","onChange","ContactView","useParams","cont","setCont","useUpdateMaterialMutation","allContacts","useEffect","find"],"sourceRoot":""}